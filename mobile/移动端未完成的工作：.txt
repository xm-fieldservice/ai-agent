让我根据代码和文档检查移动端未完成的工作：

### 移动端待完成工作清单

#### 1. 核心功能集成
1. **与Overview模块集成**
   - 实现 `feature-service.ts` 中的实际API调用
   - 替换当前的模拟数据
   - 实现事件总线连接

2. **消息处理系统**
   - 消息历史组件开发
   - 消息展示组件实现
   - 实时消息同步机制

3. **离线功能支持**
   - 离线数据存储
   - 数据同步机制
   - 冲突解决策略

#### 2. UI组件完善
```typescript
// ChatView.vue 需要添加的功能
- 消息加载状态显示
- 错误提示机制
- 消息重发功能
```

#### 3. 数据同步与存储
```typescript
// feature-service.ts 需要完善
- 本地数据缓存
- 数据同步策略
- 离线消息队列
```

#### 4. 测试与优化
1. **单元测试**
   - FeatureSelector组件测试
   - CollapsibleInputBox组件测试
   - ChatView组件测试
   - feature-service测试

2. **性能优化**
   - 消息列表虚拟滚动
   - 图片懒加载
   - 缓存优化

### 工作优先级和时间估计

| 优先级 | 任务 | 预计时间 | 依赖 |
|-------|------|---------|------|
| P0 | Overview模块集成 | 2天 | 无 |
| P0 | 消息历史组件 | 2天 | Overview集成 |
| P0 | 消息展示组件 | 3天 | Overview集成 |
| P1 | 离线功能支持 | 3天 | 消息组件 |
| P1 | 数据同步机制 | 2天 | 离线功能 |
| P2 | 单元测试编写 | 2天 | 所有功能 |
| P2 | 性能优化 | 2天 | 所有功能 |

### 建议的工作顺序

1. **第一阶段**（4-5天）
   - Overview模块集成
   - 消息历史组件开发
   - 消息展示组件实现

2. **第二阶段**（5天）
   - 离线功能支持
   - 数据同步机制实现
   - 错误处理完善

3. **第三阶段**（4天）
   - 单元测试编写
   - 性能优化
   - 最终测试和调整

您想从哪个部分开始？我建议先从Overview模块集成开始，因为这是其他功能的基础。
